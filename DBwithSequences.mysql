--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

SET default_tablespace = '';

SET default_with_oids = false;

DROP TABLE IF EXISTS Vendas;
DROP TABLE IF EXISTS Itens_venda;
DROP TABLE IF EXISTS Produto;
DROP TABLE IF EXISTS Funcionarios;
DROP TABLE IF EXISTS Cliente;

CREATE TABLE Cliente(
	cod_cliente INTEGER PRIMARY KEY NOT NULL DEFAULT nextval('cod_cliente'::regclass),
	nome VARCHAR(50) NOT NULL,
	cpf VARCHAR(20) unique,
	sexo CHAR(1) NOT NULL,
	email VARCHAR(50) unique NOT NULL,
	CONSTRAINT ck_sexo CHECK (sexo IN('F', 'M','O'))
);

CREATE TABLE Funcionarios(
	cod_funcionario INTEGER PRIMARY KEY NOT NULL DEFAULT nextval('cod_funcionario'::regclass),
	nome VARCHAR (50) NOT NULL,
	cpf VARCHAR(20) unique,
	sexo CHAR(1) NOT NULL,
	email VARCHAR(50) unique NOT NULL,
	salario DECIMAL(7,2),
	funcao VARCHAR (30) NOT NULL,
	comissoes DECIMAL(7,2),
	CONSTRAINT ck_sexo CHECK (sexo IN('F','M','O'))
	
);

CREATE TABLE Produto(
	cod_produto INTEGER PRIMARY KEY NOT NULL DEFAULT nextval('cod_produto'::regclass),
	quant_estoque INT,
	validade VARCHAR(20),
	fabricante VARCHAR(50),
	valor DECIMAL(7,2),	
	marca VARCHAR(50)
	
);

CREATE TABLE Itens_venda(
	cod_itens INTEGER PRIMARY KEY NOT NULL DEFAULT nextval('cod_itens'::regclass),
	cod_produto smallint unique NOT NULL,
	tipo VARCHAR(20),
	quant_comp smallint unique NOT null,
	FOREIGN KEY(cod_produto) REFERENCES Produto(cod_produto)
);


CREATE TABLE Vendas(
	cod_vendas INTEGER PRIMARY KEY NOT NULL DEFAULT nextval('cod_vendas'::regclass),
	cod_itens INTEGER unique NOT NULL,
	cod_funcionario INTEGER unique NOT NULL,
	cod_cliente INTEGER unique NOT NULL,
	cod_produto INTEGER unique NOT NULL,
	num_mesa smallint NOT NULL,
	valor_comissao DECIMAL(20),
	quant_produto INTEGER,
	valor_compra DECIMAL(20) NOT NULL,
	data_ VARCHAR(20),
	
	FOREIGN KEY(cod_cliente) REFERENCES Cliente(cod_cliente),
	FOREIGN KEY(cod_funcionario) REFERENCES Funcionarios(cod_funcionario),
	FOREIGN KEY(cod_itens) REFERENCES Itens_venda(cod_itens),
	FOREIGN KEY(cod_produto) REFERENCES Produto(cod_Produto)

);
